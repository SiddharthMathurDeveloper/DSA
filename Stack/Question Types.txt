


      
      
      
      
      
      

[Infix, Prefix, Postfix or expression evaluation] [Easy]
--------------------------------------------------------------------------------------------------------
150. Evaluate Reverse Polish Notation üü® ‚úÖ [How to evaluate expression in postfix to expression] [Stack] ‚≠êÔ∏è

1. Evaluation of Postfix Expression üü© ‚úÖ [GFG] [How to evaluate expression in postfix to expression] [Stack]

2. Postfix to Infix üü© ‚úÖ [convert postfix to infix] [Stack]

3. Postfix to Prefix üü© ‚úÖ [convert postfix to Prefix] [Stack + reverse code of stack trick] [VVVIIPP] [Trick] ‚≠êÔ∏è

4. Infix to Postfix [Shunting Yard algorithm][Stack to hold the operator of higher precedance and pop when lower comes above it] üü® ‚úÖ [GFG] [Monotoic Stack + BODMAS + Precedence Table] [GFG] ‚≠êÔ∏è

5. Infix to Prefix üü® ‚úÖ







1106. Parsing A Boolean Expression üü•  ‚úÖ [Retry]



  [Things I Learnt]
  --------------------------------------------------------------------------------------------------------
   - In posfix questions put operands in stack and pop when operators come , then form the equation accordling.
   
   - Compiler converts infix to postfix to solve the equation / expression , So try converting the expression to postfix if need to be. [VVIIPP] 
   
   
   
    
  



















[Parentheses] [Tough]
--------------------------------------------------------------------------------------------------------

  



[System Design] [Tough]
-------------------------------------------------------------------------------------------------------- 

[Stack and Queue Operations] [Easy]
--------------------------------------------------------------------------------------------------------

[Next Greater Element]
-------------------------------------------------------------------------------------------------------- 



[Extras]
-------------------------------------------------------------------------------------------------------- 




      
         
 
