
[Parentheses]
--------------------------------------------------------------------------------------------------------
1. Maximum Nesting Depth of the Parentheses ğŸŸ© âœ…
2. Remove Outermost Parentheses ğŸŸ© âœ…
3. Valid Parentheses ğŸŸ© âœ…
4. Minimum Add to Make Parentheses Valid ğŸŸ¨ âœ…
5. Maximum Nesting Depth of Two Valid Parentheses Strings ğŸŸ¨ âœ… [Dislike > Like ]
6. Reverse Substrings Between Each Pair of Parentheses ğŸŸ¨ âœ… [Retry]
7. Minimum Remove to Make Valid Parentheses ğŸŸ¨ 
8. Score of Parentheses ğŸŸ¨ âœ… [Retry] 
9. Minimum Insertions to Balance a Parentheses String ğŸŸ¨
10. Check if a Parentheses String Can Be Valid ğŸŸ¨
11. Longest Valid Parentheses ğŸŸ¥  

[Observations]
--------------------------------------------------------------------------------------------------------
1. If valid Test case are only possible or it is given that only vaild string are given then , Then we have observed that stack will only hold '(' [Open] ,And we have to pop when ')' [close]. The operation has to been done keep this in mind , But if the valid Test case may or may not exist then , this may or may not hold true in that case . So think in t.hat way according
