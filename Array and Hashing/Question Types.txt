
[ Array + Maths ]
---------------------------------------
1470. Shuffle the Array ⭐
  -> mutiply the n+i values with 10000 in first loop [2,5,1,20003,50004,10007] new array becomes this
  -> In second loop extract the values x and y ,
  -> x by nums[i+n]/10000 first value 2 , y by  nums[2*i+1] = nums[i+n]%10000 value 3 , do this for each element (20003) this number stores both first and second value

1920. Build Array from Permutation ⭐
  -> To accomplish this task, we're going to use the fact that if we have a number of the form a = qb + r, where b and r are not multiples of q and r < q, then we can extract b and r with the following:
  -> Let, size of array = n , original number = a , final number = b
  -> So we will store a = a + n*b
  -> On taking a%n, we will get a On doing a/n, we will get b
  -> Here the b that we are using is actually an a and there is a chance that it might be an a that is updated (final number) To get a from a, we use a%n So, here it will be b%n
  -> Finally, our equation becomes a=a +n(b%n) ,  In the question a=nums[i] and b=nums[nums[i]]
  -> So finally, the equation becomes nums[i] = nums[i] + n * (nums[nums[i]]%n)

 


  Things I Learned
  ---------------------------------------
  -> Maths is used for inplace operation (Store values in given array only no extra space) 
    [a = bq + r] (Euclid's division lemma)

      -> 1470. Shuffle the Array  
           -> How to store 2 values in one index 
           -> Store formula (nums[i]*10000)  
           -> Get first value [x] formula( nums[i+n]/10000 ) 
           -> Get Second value [y] formula( nums[i+n]%10000 )

      -> 1920. Build Array from Permutation
          -> How to store 2 values in one index
          -> Store formula (nums[i] + (n*(nums[nums[i]]%n)))  [nums[nums[i]] is given in question]
          -> Get new value by ( nums[i]/n )
          -> Get old value by ( nums[i]%n )
  
          
        

